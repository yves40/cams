#--------------------------------------------------------------------------------
#	nodeadmin.sh
#
#	Jan 26 2019  	Initial
#	Jan 28 2019  	Add code to the three utility routines
#--------------------------------------------------------------------------------
VERSION="nodeadmin.sh v 1.09, Jan 28 2019 "
LOG="/tmp/camsnode.log"
CAMSROOT="/var/www/html/cams/"
#--------------------------------------------------------------------------------
# Logger
#--------------------------------------------------------------------------------
log()
{
        echo "`date` : $VERSION $1" >> $LOG
        echo "`date` : $1"
}
#---------------------------------------------------------------------------------------
#   usage
#---------------------------------------------------------------------------------------
Usage()
{
  echo
  echo
  echo "./nodeadmin.sh start|stop|status"
  echo
  echo
}
#---------------------------------------------------------------------------------------
#   Node processes startup
#---------------------------------------------------------------------------------------
NodeStart()
{
  echo
  echo
  echo 'Starting node processes'
  echo
  cd $CAMS
  npm run all
  cd $CAMS/shell
  echo
}
#---------------------------------------------------------------------------------------
#   Node processes stop
#---------------------------------------------------------------------------------------
NodeStop()
{
  echo
  echo
  echo 'Stopping all node processes'
  echo
  ps -edf | grep -v grep | grep -i -e 'webpack-dev-server
nodemon
/TOOLS/node/bin/node' > processlist

  while read line
  do  
    pid=`echo "$line" | awk '/ / { print $2 }';`
    log "[!!!] $pid killed"
    kill $pid
  done < processlist
  echo
}
#---------------------------------------------------------------------------------------
#   Node processes status
#---------------------------------------------------------------------------------------
NodeStatus()
{
  echo
  echo 'Node processes status'
  echo
  ps -edf | grep -v grep | grep -i -e 'webpack-dev-server
nodemon
/TOOLS/node/bin/node' > processlist

  while read line
  do  
    pid=`echo "$line" | awk '/ / { print $2 }';`
    ppid=`echo "$line" | awk '/ / { print $3 }';`
    processname=`echo $line | cut -d ' ' -f 8-`
    log "[] $pid $ppid $processname"
  done < processlist

  echo
  echo
}
#---------------------------------------------------------------------------------------
#   Start here
#---------------------------------------------------------------------------------------
clear
echo
echo $VERSION
echo
if [ -z $1 ]
then
  Usage
  echo
  exit 1
fi

case $1 in 
  'start')  NodeStart
            ;;
  'stop')   NodeStop
            ;;
  'status') 
            NodeStatus
            ;;
esac

exit


#--------------------------------------------------------------------------------
# R E S E R V O I R
#--------------------------------------------------------------------------------

echo

if [ -e $AVCLIHOME/audittrails.txt ]
then
  rm -f $AVCLIHOME/audittrails.txt
fi
#------------------------------------------------------
# Generate the target audit trail list
#------------------------------------------------------
while read line
do  
  thetarget=`echo "$line" | awk '/ / { print $2 }';` 
  echo "[] $thetarget STOPPED trails" >> $AVCLIHOME/audittrails.txt
  echo "connect ${AVCONNECT};" > $AVCLIHOME/shell.av
  echo "LIST TRAIL FOR SECURED TARGET $thetarget ;" >> $AVCLIHOME/shell.av
  $AVCLIHOME/bin/avcli -f $AVCLIHOME/shell.av >> $AVCLIHOME/audittrails.txt
done < $AVCLIHOME/targets.txt

grep -i -e 'STOPPED
UNREACHABLE' $AVCLIHOME/audittrails.txt > $AVCLIHOME/tobestarted.txt


#------------------------------------------------------
# Generate avcli commands for the trails to be started
#------------------------------------------------------
echo "#---------------------------------------------------------------------" > $AVCLIHOME/shell.av
echo "# Generated by $VERSION" >> $AVCLIHOME/shell.av
echo "#    `date`" >> $AVCLIHOME/shell.av
echo "#---------------------------------------------------------------------" >> $AVCLIHOME/shell.av
echo "connect ${AVCONNECT};" >> $AVCLIHOME/shell.av

localhost=`hostname`
while read line
do  
  linetype=`echo "$line" | awk '/ / { print $1 }'` 
  if [ ${linetype} = '[]' ]
  then
      target=`echo "$line" | awk '/ / { print $2 }'`
  else
      targettype=`echo "$line" | awk '/ / { print $2 }'`
      host=`echo "$line" | awk '/ / { print $4 }'`
      auditsource=`echo "$line" | awk '/ / { print $6 }'`
      startit=`echo $host | grep -i $localhost`
      if [ ! -z $startit ]
      then
        echo "START COLLECTION FOR SECURED TARGET $target USING HOST $host FROM $targettype $auditsource;" >> $AVCLIHOME/shell.av
      fi
  fi
done < $AVCLIHOME/tobestarted.txt
echo "exit" >> $AVCLIHOME/shell.av
#
# Check there's something to start. If yes start the script
#
grep -i "START COLLECTION" $AVCLIHOME/shell.av  > /dev/null
if [ $? = 0 ]
then
  cat $AVCLIHOME/shell.av >> $LOG
  $AVCLIHOME/bin/avcli -f $AVCLIHOME/shell.av
fi
#
# Cleanup
#
#rm $AVCLIHOME/audittrails.txt $AVCLIHOME/targets.txt $AVCLIHOME/tobestarted.txt
exit 0

